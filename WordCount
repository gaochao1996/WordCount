
import scala.actors.{Future, Actor}
import scala.collection.mutable
import scala.collection.mutable.{ListBuffer, ArrayBuffer}
import scala.io.Source
 
/**
 * mhc
 * Created by Administrator on 2016/5/12.
 */
 
case class startTask(fileName: String)
 
case class stopTask()
 
case class resultSet(result: Map[String, Int])
 
class Task extends Actor {
  override def act(): Unit = {
    loop {
      react {
        case startTask(fileName: String) => {
          // 开始任务
          val lines = Source.fromFile(fileName).mkString
          val arr = lines.split("\r\n")
          val result = arr.flatMap(_.split(" ")).map((_, 1)).groupBy(_._1).mapValues(_.length)
          sender ! resultSet(result)
        }
        case stopTask => {
          exit()
        }
 
      }
    }
  }
}
